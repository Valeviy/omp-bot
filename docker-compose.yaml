version: "3.9"

services:
  omp-bot:
    build:
      context: .
      dockerfile: docker/omp-bot/Dockerfile
    restart: unless-stopped
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12205'
        tag: omp-bot
    networks:
      - botnw
    ports:
      - 9105:9100 # Metrics prometheus
      - 8500:8000 # Status prometheus
      - 45000:40000 # Debug port
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8500/live']
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - ./config.yml:/root/config.yml

  jaeger:
    image: jaegertracing/all-in-one
    restart: unless-stopped
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12205'
        tag: jaeger
    ports:
      - 6835:6831/udp
      - 16685:16686
    networks:
      - botnw

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12205'
        tag: prometheus
    ports:
      - 9099:9090
    networks:
      - botnw
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - 3500:3000
    links:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORT
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - botnw
    volumes:
      - "./data/grafana:/var/lib/grafana"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - botnw
    volumes:
      - esdata:/usr/share/elasticsearch/data
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html

  mongo:
    image: mongo:4.2
    restart: always
    networks:
      - botnw
    volumes:
      - mongodata:/data/db

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:4.2
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    networks:
      - botnw
    links:
      - mongo
      - elasticsearch
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9500:9000
      # Syslog TCP
      - 1515:1514
      # Syslog UDP
      - 1515:1514/udp
      # GELF TCP
      - 12205:12201
      # GELF UDP
      - 12205:12201/udp
    restart: always

volumes:
  pgdata:
    driver: local
  esdata:
    driver: local
  mongodata:
    driver: local

networks:
  botnw:
    driver: bridge
